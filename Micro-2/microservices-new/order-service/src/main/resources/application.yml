eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka


spring:
  application:
    name: order-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/orders
    username: postgres
    password: root

  jpa:
    hibernate:
      ddl-auto: update


    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  # kafka properties
  kafka:
   bootstrap-servers:
     - localhost:9092
   template:
     default-topic: notificationTopic
   producer:
     key-serializer: "org.apache.kafka.common.serialization.StringSerializer"
     value-serializer: "org.apache.kafka.common.serialization.StringSerializer"
     properties:
       spring-json-type-mapping: "event:dev.reddy.orderservice.event.OrderPlacedEvent"
       spring-json-trusted-packages: "dev.reddy.orderservice.event"



management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

        #Resilience4j timeout properties
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 3s

  retry:
    instances:
      inventory:
        maxAttempts: 3
        waitDuration: 5s




server:
  port: 0
